/*      */ package org.fife.ui.rsyntaxtextarea.modes;
/*      */ 
/*      */ import java.io.IOException;
/*      */ import java.io.InputStream;
/*      */ import java.io.InputStreamReader;
/*      */ import java.io.Reader;
/*      */ import javax.swing.text.Segment;
/*      */ import org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker;
/*      */ import org.fife.ui.rsyntaxtextarea.Token;
/*      */ import org.fife.ui.rsyntaxtextarea.TokenImpl;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class Assembler6502TokenMaker
/*      */   extends AbstractJFlexTokenMaker
/*      */ {
/*      */   public static final int YYEOF = -1;
/*      */   public static final int EOL_COMMENT = 2;
/*      */   public static final int YYINITIAL = 0;
/*   70 */   private static final int[] ZZ_LEXSTATE = new int[] { 0, 1, 2, 2 };
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final String ZZ_CMAP_PACKED = "\t\000\0013\001\r\001\000\001\016\023\000\0013\001\021\001\n\0012\001\004\001\007\001!\001\013\002)\001\020\001\020\001\t\001\020\001\022\001\036\002\b\b\003\001\017\001\f\001$\001(\001&\001)\0011\001\034\001\023\001\005\001 \001\032\001+\001\001\001\006\001\024\001/\001\035\001\030\001\037\001\026\001\027\001*\001-\001#\001%\001\025\0010\001.\001,\001\"\001\031\001\001\001\t\001\000\001\t\001\033\001\002\001\000\001\034\001\023\001\005\001 \001\032\0015\001\001\0014\001\024\001/\001\035\001\030\001\037\001\026\001\027\001*\001-\001#\001%\001\025\0010\001.\0016\001\"\001\031\001\001\001\000\001'\001\000\001\021ﾁ\000";
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*   92 */   private static final char[] ZZ_CMAP = zzUnpackCMap("\t\000\0013\001\r\001\000\001\016\023\000\0013\001\021\001\n\0012\001\004\001\007\001!\001\013\002)\001\020\001\020\001\t\001\020\001\022\001\036\002\b\b\003\001\017\001\f\001$\001(\001&\001)\0011\001\034\001\023\001\005\001 \001\032\001+\001\001\001\006\001\024\001/\001\035\001\030\001\037\001\026\001\027\001*\001-\001#\001%\001\025\0010\001.\001,\001\"\001\031\001\001\001\t\001\000\001\t\001\033\001\002\001\000\001\034\001\023\001\005\001 \001\032\0015\001\001\0014\001\024\001/\001\035\001\030\001\037\001\026\001\027\001*\001-\001#\001%\001\025\0010\001.\0016\001\"\001\031\001\001\001\000\001'\001\000\001\021ﾁ\000");
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*   97 */   private static final int[] ZZ_ACTION = zzUnpackAction();
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final String ZZ_ACTION_PACKED_0 = "\003\000\002\001\001\002\003\001\001\003\001\004\001\005\001\006\001\007\001\b\n\001\001\b\001\001\001\b\001\001\002\b\006\001\002\t\001\n\005\t\001\001\001\013\002\002\003\001\001\002\001\f\001\r\n\000\021\001\001\016\006\001\001\016\007\001\003\013\001\016\004\t\004\000\005\017\001\b\003\017\003\001\001\013\004\t\004\000\003\017\001\001\001\013\003\t\001\020\002\000\004\017\001\001\001\t\002\000\001\017";
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static int[] zzUnpackAction() {
/*  109 */     int[] result = new int[150];
/*  110 */     int offset = 0;
/*  111 */     offset = zzUnpackAction("\003\000\002\001\001\002\003\001\001\003\001\004\001\005\001\006\001\007\001\b\n\001\001\b\001\001\001\b\001\001\002\b\006\001\002\t\001\n\005\t\001\001\001\013\002\002\003\001\001\002\001\f\001\r\n\000\021\001\001\016\006\001\001\016\007\001\003\013\001\016\004\t\004\000\005\017\001\b\003\017\003\001\001\013\004\t\004\000\003\017\001\001\001\013\003\t\001\020\002\000\004\017\001\001\001\t\002\000\001\017", offset, result);
/*  112 */     return result;
/*      */   }
/*      */   
/*      */   private static int zzUnpackAction(String packed, int offset, int[] result) {
/*  116 */     int i = 0;
/*  117 */     int j = offset;
/*  118 */     int l = packed.length();
/*  119 */     label10: while (i < l) {
/*  120 */       int count = packed.charAt(i++);
/*  121 */       int value = packed.charAt(i++); while (true)
/*  122 */       { result[j++] = value; if (--count <= 0)
/*      */           continue label10;  } 
/*  124 */     }  return j;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  131 */   private static final int[] ZZ_ROWMAP = zzUnpackRowMap();
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final String ZZ_ROWMAP_PACKED_0 = "\000\000\0007\000n\000¥\000Ü\000ē\000Ŋ\000Ɓ\000Ƹ\000ǯ\000Ȧ\000¥\000¥\000ɝ\000¥\000ʔ\000ˋ\000̂\000̹\000Ͱ\000Χ\000Ϟ\000Е\000ь\000҃\000Һ\000ӱ\000Ԩ\000՟\000֖\000׍\000؄\000ػ\000ٲ\000ک\000۠\000ܗ\000ݎ\000ޅ\000¥\000޼\000߳\000ࠪ\000ࡡ\000࢘\000࣏\000࣏\000Ü\000Ŋ\000आ\000ऽ\000ॴ\000Ƹ\000¥\000¥\000ফ\000ৢ\000ਙ\000੐\000ઇ\000ા\000૵\000ବ\000ୣ\000ச\000௑\000ఈ\000ి\000౶\000ಭ\000೤\000ഛ\000൒\000ඉ\000ව\000෷\000ฮ\000๥\000ຜ\000໓\000༊\000ཁ\000Ü\000ླྀ\000ྯ\000࿦\000ဝ\000ၔ\000ႋ\000ػ\000Ⴢ\000ჹ\000ᄰ\000ᅧ\000ᆞ\000ᇕ\000ሌ\000ک\000ቃ\000ቺ\000኱\000የ\000ጟ\000ፖ\000ᎍ\000Ꮔ\000ᏻ\000ᐲ\000ᑩ\000ফ\000ᒠ\000ᓗ\000ᔎ\000ᕅ\000ফ\000ᕼ\000ઇ\000ᖳ\000ᗪ\000ᘡ\000ᙘ\000ᚏ\000ᛆ\000᛽\000᜴\000ᝫ\000អ\000៙\000᠐\000ᡇ\000᡾\000ᢵ\000ᣬ\000ᤣ\000¥\000ᥚ\000ᦑ\000ᧈ\000᧿\000ᨶ\000ᩭ\000᪤\000੐\000૵\000ୣ\000᫛\000ᬒ\000᧿\000ᭉ\000ᮀ";
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static int[] zzUnpackRowMap() {
/*  155 */     int[] result = new int[150];
/*  156 */     int offset = 0;
/*  157 */     offset = zzUnpackRowMap("\000\000\0007\000n\000¥\000Ü\000ē\000Ŋ\000Ɓ\000Ƹ\000ǯ\000Ȧ\000¥\000¥\000ɝ\000¥\000ʔ\000ˋ\000̂\000̹\000Ͱ\000Χ\000Ϟ\000Е\000ь\000҃\000Һ\000ӱ\000Ԩ\000՟\000֖\000׍\000؄\000ػ\000ٲ\000ک\000۠\000ܗ\000ݎ\000ޅ\000¥\000޼\000߳\000ࠪ\000ࡡ\000࢘\000࣏\000࣏\000Ü\000Ŋ\000आ\000ऽ\000ॴ\000Ƹ\000¥\000¥\000ফ\000ৢ\000ਙ\000੐\000ઇ\000ા\000૵\000ବ\000ୣ\000ச\000௑\000ఈ\000ి\000౶\000ಭ\000೤\000ഛ\000൒\000ඉ\000ව\000෷\000ฮ\000๥\000ຜ\000໓\000༊\000ཁ\000Ü\000ླྀ\000ྯ\000࿦\000ဝ\000ၔ\000ႋ\000ػ\000Ⴢ\000ჹ\000ᄰ\000ᅧ\000ᆞ\000ᇕ\000ሌ\000ک\000ቃ\000ቺ\000኱\000የ\000ጟ\000ፖ\000ᎍ\000Ꮔ\000ᏻ\000ᐲ\000ᑩ\000ফ\000ᒠ\000ᓗ\000ᔎ\000ᕅ\000ফ\000ᕼ\000ઇ\000ᖳ\000ᗪ\000ᘡ\000ᙘ\000ᚏ\000ᛆ\000᛽\000᜴\000ᝫ\000អ\000៙\000᠐\000ᡇ\000᡾\000ᢵ\000ᣬ\000ᤣ\000¥\000ᥚ\000ᦑ\000ᧈ\000᧿\000ᨶ\000ᩭ\000᪤\000੐\000૵\000ୣ\000᫛\000ᬒ\000᧿\000ᭉ\000ᮀ", offset, result);
/*  158 */     return result;
/*      */   }
/*      */   
/*      */   private static int zzUnpackRowMap(String packed, int offset, int[] result) {
/*  162 */     int i = 0;
/*  163 */     int j = offset;
/*  164 */     int l = packed.length();
/*  165 */     while (i < l) {
/*  166 */       int high = packed.charAt(i++) << 16;
/*  167 */       result[j++] = high | packed.charAt(i++);
/*      */     } 
/*  169 */     return j;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  175 */   private static final int[] ZZ_TRANS = zzUnpackTrans();
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final String ZZ_TRANS_PACKED_0 = "\001\004\002\005\001\006\001\007\001\b\001\005\001\t\001\006\001\004\001\n\001\013\001\f\001\r\001\016\001\004\002\017\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\005\001\027\001\017\001\030\001\005\001\017\001\005\001\031\001\032\001\005\001\033\001\034\001\035\001\036\001\037\001\017\001\004\001 \001!\003\005\001\"\001\005\001#\001$\001\016\001\005\001!\001\005\001\004\002\005\001\006\001\007\001\b\001\005\001%\001\006\001\004\001\n\001\013\001\f\001\r\001\016\001\004\002\017\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\005\001\027\001\017\001\030\001\005\001\017\001\005\001\031\001\032\001\005\001\033\001\034\001\035\001\036\001\037\001\017\001\004\001 \001!\003\005\001\"\001\005\001#\001$\001\016\001\005\001!\001\005\006&\001'\006&\001(\035&\001)\001*\007&\001+\001,\001-7\000\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\002\005\001\006\001.\001!\0010\001\000\001\006\001\000\003.\002\000\001/\001\000\001.\001\000\001!\006\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\003\000\0011\001\000\0011\002\000\0011\n\000\0011\006\000\0011\001\000\0011\003\000\0011\n\000\0011\t\000\0011\001\000\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\004\005\0012\001\005\001!\001.\001!\001\005\001\000\0013\001!\001.\002\005\001.\001\005\004.\0014\001!\005\005\002.\001\000\0010\001!\001\005\b\000\0015.\000\n\n\0016,\n\013\013\0017+\013\016\000\001\016$\000\001\016\004\000\0038\001\000\0018\0019\001\000\0018\n\000\001:\0028\001;\001<\001=\0028\001\000\001>\0018\001\000\001?\0018\001\000\001@\0018\001\000\001A\004\000\0078\003\000\0019\0028\001.\002\005\001!\001.\001B\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\001C\001\005\001D\003\005\001E\001.\001!\001\005\001\000\001F\001!\001.\001\005\001G\001.\001\005\004.\001H\001!\002\005\001I\002\005\002.\001\000\0010\001!\001\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\003\005\001J\004\005\001.\002\005\001\000\002\005\001.\002\005\001.\001K\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001\005\001L\004\005\001M\001N\001.\0014\001\005\001\000\002\005\001.\001O\001\005\001.\001P\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\004\005\0013\003\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001\005\001M\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001Q\001\005\001\000\001\005\001R\001.\001\005\001S\001.\001T\004.\007\005\002.\001\000\003\005\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\003\005\001T\002\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\001\005\001U\003\005\002.\001\000\0010\001!\001\005\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\002\005\001V\003\005\001!\001.\001!\001\005\001\000\001\005\001W\001.\001X\001T\001.\001H\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\001.\002\005\001!\001.\001Y\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001Z\001\005\001S\004\005\001[\001.\001!\001\005\001\000\001\005\001Z\001.\002\005\001.\001\005\004.\001\005\001Z\002S\002\005\0013\002.\001\000\0010\001Z\001S!\000\001\017\025\000\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\002\005\001\\\001\005\001]\001M\001\005\001^\001.\002\005\001\000\002\005\001.\001\005\001M\001.\001\005\004.\007\005\002.\001\000\003\005$\000\001\017\001\000\001\017\001\000\001\017\016\000\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001K\001\005\001R\002\005\001_\001\005\001`\001.\001P\001\005\001\000\002\005\001.\001\005\001D\001.\001\005\004.\007\005\002.\001\000\003\005&\000\001\017\001\000\001\0175\000\001\017\017\000\001.\003\005\001.\001\005\001a\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\005\005\001a\002\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\001a\002\005\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\006\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\0013\001\005\001.\002\005\001.\001T\004.\007\005\002.\001\000\003\005\001\000\002b\002\000\002b\f\000\bb\001\000\002b\001\000\002b\001\000\002b\001\000\001b\004\000\007b\003\000\003b\nc\001d(c\001\000\003c\001\000\002e\002\000\002e\001\000\0015\n\000\be\001\000\002e\001\000\002e\001\000\002e\001\000\001e\004\000\007e\003\000\003e\r&\001\000&&\003\000\r&\001\000\007&\001f\036&\003\000\r&\001\000\006&\001g\001h\036&\003\000\r&\001\000\036&\001i\007&\002\000\001j\025\000\001k5\000\001l\001mM\000\001j\t\000\001j\007.\001\000\001.\001\000\003.\002\000\001.\001\000\001.\001\000\013.\001\000\024.\001\000\004.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001\005\001S\006\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\004\005\001S\002\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\001S\006\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\006\005\001S\001\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\001n\001o\tn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\001n\001p\007n\001q\001n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001r\006n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\004n\001s\017n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001o\006n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\003n\001t\007n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001t\006n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001u\006n\001\000\024n\001\000\tn\001v\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\024n\001\000\001v\002nb\005\001.\001\005\001S\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\005\005\001S\002\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001S\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\006\005\001S\001\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\001w\001\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001S\001\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001x\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001S\001\005\001\000\002\005\001.\002\005\001.\001S\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001S\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\006\005\001S\001\005\001.\001S\001\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001\005\001S\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\006\005\001S\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\002\005\001!\001.\001Z\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\006\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\bb\005\001.\002\005\001\000\002\005\001.\002\005\001.\001yb\005\001.\001S\001\005\001\000\002\005\001.\002\005\001.\001\005\004.\001S\006\005\002.\001\000\003\0053c\001\000\003c\nd\001c(d\001z\003d\001\000\003e\001\000\002e\001\000\001e\n\000\be\001\000\002e\001\000\002e\001\000\002e\001\000\001e\004\000\007e\003\000\003e\r&\001\000\007&\001{\036&\003\000\r&\001\000\n&\001|\033&\003\000\r&\001\000\034&\001}\t&\003\000\r&\001\000\036&\001~\007&\002\000\001,\000\001\t\000\001\025\000\0019\000\001H\000\001\f\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\001\nn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\002n\001\bn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\003n\001\007n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\002n\001s\bn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\001n\001s\022n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\005n\001s\005n\001\000\004n\001s\017n\001\000\003n\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\007\005\001X\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\002\005\001\005\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001S\001\005\001S\005\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\002\005\002S\003\005\002.\001\000\002\005\001S\nz\001,z\r&\001\000\034&\001\t&\003\000\r&\001\000\f&\001}\031&\003\000\r&\001\000\001&\001$&\003\000\r&\001\000\004&\001!&\025\000\001N\000\001&\000\001+\000\001'\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\006n\001\004n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\003n\001\001u\004n\001\001n\001\000\003n\001\020n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\nn\001o\001\000\024n\001\000\003n\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\007\005\001\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\r&\001\000\001&\001\025&\001}\016&\003\000\r&\001\000\020&\001\025&\003\000\001&\t\001&\002\001\000\001&\f\001&\b\001&\001\002&\013\001&\003\001\000\001\001\004\001\001\001\001\000\002\002\000\004\b\001\000\005\001\002\001\000\001\002\000\002\007\002\001\000\003\017\000\001\025\000\001/\000\001\030\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\002n\001\bn\001\000\024n\001\000\003n\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\003\005\001U\003\005\002.\001\000\003\005\r&\001\000\020&\001\025&!\000\001\030\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\007n\001s\003n\001\000\024n\001\000\003n";
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final int ZZ_UNKNOWN_ERROR = 0;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final int ZZ_NO_MATCH = 1;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static final int ZZ_PUSHBACK_2BIG = 2;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static int[] zzUnpackTrans() {
/*  496 */     int[] result = new int[7095];
/*  497 */     int offset = 0;
/*  498 */     offset = zzUnpackTrans("\001\004\002\005\001\006\001\007\001\b\001\005\001\t\001\006\001\004\001\n\001\013\001\f\001\r\001\016\001\004\002\017\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\005\001\027\001\017\001\030\001\005\001\017\001\005\001\031\001\032\001\005\001\033\001\034\001\035\001\036\001\037\001\017\001\004\001 \001!\003\005\001\"\001\005\001#\001$\001\016\001\005\001!\001\005\001\004\002\005\001\006\001\007\001\b\001\005\001%\001\006\001\004\001\n\001\013\001\f\001\r\001\016\001\004\002\017\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\005\001\027\001\017\001\030\001\005\001\017\001\005\001\031\001\032\001\005\001\033\001\034\001\035\001\036\001\037\001\017\001\004\001 \001!\003\005\001\"\001\005\001#\001$\001\016\001\005\001!\001\005\006&\001'\006&\001(\035&\001)\001*\007&\001+\001,\001-7\000\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\002\005\001\006\001.\001!\0010\001\000\001\006\001\000\003.\002\000\001/\001\000\001.\001\000\001!\006\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\003\000\0011\001\000\0011\002\000\0011\n\000\0011\006\000\0011\001\000\0011\003\000\0011\n\000\0011\t\000\0011\001\000\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\004\005\0012\001\005\001!\001.\001!\001\005\001\000\0013\001!\001.\002\005\001.\001\005\004.\0014\001!\005\005\002.\001\000\0010\001!\001\005\b\000\0015.\000\n\n\0016,\n\013\013\0017+\013\016\000\001\016$\000\001\016\004\000\0038\001\000\0018\0019\001\000\0018\n\000\001:\0028\001;\001<\001=\0028\001\000\001>\0018\001\000\001?\0018\001\000\001@\0018\001\000\001A\004\000\0078\003\000\0019\0028\001.\002\005\001!\001.\001B\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\001C\001\005\001D\003\005\001E\001.\001!\001\005\001\000\001F\001!\001.\001\005\001G\001.\001\005\004.\001H\001!\002\005\001I\002\005\002.\001\000\0010\001!\001\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\003\005\001J\004\005\001.\002\005\001\000\002\005\001.\002\005\001.\001K\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001\005\001L\004\005\001M\001N\001.\0014\001\005\001\000\002\005\001.\001O\001\005\001.\001P\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\004\005\0013\003\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001\005\001M\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001Q\001\005\001\000\001\005\001R\001.\001\005\001S\001.\001T\004.\007\005\002.\001\000\003\005\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\003\005\001T\002\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\001\005\001U\003\005\002.\001\000\0010\001!\001\005\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\002\005\001V\003\005\001!\001.\001!\001\005\001\000\001\005\001W\001.\001X\001T\001.\001H\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\001.\002\005\001!\001.\001Y\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001Z\001\005\001S\004\005\001[\001.\001!\001\005\001\000\001\005\001Z\001.\002\005\001.\001\005\004.\001\005\001Z\002S\002\005\0013\002.\001\000\0010\001Z\001S!\000\001\017\025\000\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\002\005\001\\\001\005\001]\001M\001\005\001^\001.\002\005\001\000\002\005\001.\001\005\001M\001.\001\005\004.\007\005\002.\001\000\003\005$\000\001\017\001\000\001\017\001\000\001\017\016\000\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001K\001\005\001R\002\005\001_\001\005\001`\001.\001P\001\005\001\000\002\005\001.\001\005\001D\001.\001\005\004.\007\005\002.\001\000\003\005&\000\001\017\001\000\001\0175\000\001\017\017\000\001.\003\005\001.\001\005\001a\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\005\005\001a\002\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\001a\002\005\001.\002\005\001!\001.\001!\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\006\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\0013\001\005\001.\002\005\001.\001T\004.\007\005\002.\001\000\003\005\001\000\002b\002\000\002b\f\000\bb\001\000\002b\001\000\002b\001\000\002b\001\000\001b\004\000\007b\003\000\003b\nc\001d(c\001\000\003c\001\000\002e\002\000\002e\001\000\0015\n\000\be\001\000\002e\001\000\002e\001\000\002e\001\000\001e\004\000\007e\003\000\003e\r&\001\000&&\003\000\r&\001\000\007&\001f\036&\003\000\r&\001\000\006&\001g\001h\036&\003\000\r&\001\000\036&\001i\007&\002\000\001j\025\000\001k5\000\001l\001mM\000\001j\t\000\001j\007.\001\000\001.\001\000\003.\002\000\001.\001\000\001.\001\000\013.\001\000\024.\001\000\004.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001\005\001S\006\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\004\005\001S\002\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\001S\006\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\006\005\001S\001\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\001n\001o\tn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\001n\001p\007n\001q\001n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001r\006n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\004n\001s\017n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001o\006n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\003n\001t\007n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001t\006n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\004n\001u\006n\001\000\024n\001\000\tn\001v\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\024n\001\000\001v\002nb\005\001.\001\005\001S\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\005\005\001S\002\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001S\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\006\005\001S\001\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\001w\001\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001S\001\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001x\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001S\001\005\001\000\002\005\001.\002\005\001.\001S\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001S\001\005\001.\001S\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\006\005\001S\001\005\001.\001S\001\005\001\000\002\005\001.\001S\001\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\001\005\001S\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\006\005\001S\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\002\005\001!\001.\001Z\0010\001\000\001!\001\000\003.\002\000\001/\001\000\001.\001\000\001!\006\005\001!\001.\001!\001\005\001\000\001\005\001!\001.\002\005\001.\001\005\004.\001\005\001!\005\005\002.\001\000\0010\001!\001\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\bb\005\001.\002\005\001\000\002\005\001.\002\005\001.\001y\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\004\005\001S\003\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\001S\001\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001\005\001S\006\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\001S\001\005\001\000\002\005\001.\002\005\001.\001\005\004.\001S\006\005\002.\001\000\003\0053c\001\000\003c\nd\001c(d\001z\003d\001\000\003e\001\000\002e\001\000\001e\n\000\be\001\000\002e\001\000\002e\001\000\002e\001\000\001e\004\000\007e\003\000\003e\r&\001\000\007&\001{\036&\003\000\r&\001\000\n&\001|\033&\003\000\r&\001\000\034&\001}\t&\003\000\r&\001\000\036&\001~\007&\002\000\001,\000\001\t\000\001\025\000\0019\000\001H\000\001\f\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\001\nn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\002n\001\bn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\003n\001\007n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\002n\001s\bn\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\013n\001\000\001n\001s\022n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\005n\001s\005n\001\000\004n\001s\017n\001\000\003n\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\007\005\001X\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\002\005\001\005\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\001S\001\005\001S\005\005\001.\002\005\001\000\001\005\001S\001.\002\005\001.\001\005\004.\002\005\002S\003\005\002.\001\000\002\005\001S\nz\001,z\r&\001\000\034&\001\t&\003\000\r&\001\000\f&\001}\031&\003\000\r&\001\000\001&\001$&\003\000\r&\001\000\004&\001!&\025\000\001N\000\001&\000\001+\000\001'\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\006n\001\004n\001\000\024n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\003n\001\001u\004n\001\001n\001\000\003n\001\020n\001\000\nn\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\nn\001o\001\000\024n\001\000\003n\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\007\005\001\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\007\005\002.\001\000\003\005\r&\001\000\001&\001\025&\001}\016&\003\000\r&\001\000\020&\001\025&\003\000\001&\t\001&\002\001\000\001&\f\001&\b\001&\001\002&\013\001&\003\001\000\001\001\004\001\001\001\001\000\002\002\000\004\b\001\000\005\001\002\001\000\001\002\000\002\007\002\001\000\003\017\000\001\025\000\001/\000\001\030\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\002n\001\bn\001\000\024n\001\000\003n\001.\003\005\001.\002\005\001\000\001\005\001\000\003.\002\000\001/\001\000\001.\001\000\b\005\001.\002\005\001\000\002\005\001.\002\005\001.\001\005\004.\003\005\001U\003\005\002.\001\000\003\005\r&\001\000\020&\001\025&!\000\001\030\000\007n\001\000\001n\001\000\003n\002\000\001n\001\000\001n\001\000\007n\001s\003n\001\000\024n\001\000\003n", offset, result);
/*  499 */     return result;
/*      */   }
/*      */   
/*      */   private static int zzUnpackTrans(String packed, int offset, int[] result) {
/*  503 */     int i = 0;
/*  504 */     int j = offset;
/*  505 */     int l = packed.length();
/*  506 */     label10: while (i < l) {
/*  507 */       int count = packed.charAt(i++);
/*  508 */       int value = packed.charAt(i++);
/*  509 */       value--; while (true)
/*  510 */       { result[j++] = value; if (--count <= 0)
/*      */           continue label10;  } 
/*  512 */     }  return j;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  522 */   private static final String[] ZZ_ERROR_MSG = new String[] { "Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large" };
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  531 */   private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();
/*      */   
/*      */   private static final String ZZ_ATTRIBUTE_PACKED_0 = "\003\000\001\t\007\001\002\t\001\001\001\t\030\001\001\t\r\001\002\t\n\000(\001\004\000\021\001\004\000\004\001\001\t\004\001\002\000\006\001\002\000\001\001";
/*      */   
/*      */   private Reader zzReader;
/*      */   private int zzState;
/*      */   
/*      */   private static int[] zzUnpackAttribute() {
/*  539 */     int[] result = new int[150];
/*  540 */     int offset = 0;
/*  541 */     offset = zzUnpackAttribute("\003\000\001\t\007\001\002\t\001\001\001\t\030\001\001\t\r\001\002\t\n\000(\001\004\000\021\001\004\000\004\001\001\t\004\001\002\000\006\001\002\000\001\001", offset, result);
/*  542 */     return result;
/*      */   }
/*      */   
/*      */   private static int zzUnpackAttribute(String packed, int offset, int[] result) {
/*  546 */     int i = 0;
/*  547 */     int j = offset;
/*  548 */     int l = packed.length();
/*  549 */     label10: while (i < l) {
/*  550 */       int count = packed.charAt(i++);
/*  551 */       int value = packed.charAt(i++); while (true)
/*  552 */       { result[j++] = value; if (--count <= 0)
/*      */           continue label10;  } 
/*  554 */     }  return j;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  564 */   private int zzLexicalState = 0;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private char[] zzBuffer;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private int zzMarkedPos;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private int zzCurrentPos;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private int zzStartRead;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private int zzEndRead;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private boolean zzAtBOL = true;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private boolean zzAtEOF;
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public Assembler6502TokenMaker() {}
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private void addHyperlinkToken(int start, int end, int tokenType) {
/*  610 */     int so = start + this.offsetShift;
/*  611 */     addToken(this.zzBuffer, start, end, tokenType, so, true);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private void addToken(int tokenType) {
/*  621 */     addToken(this.zzStartRead, this.zzMarkedPos - 1, tokenType);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private void addToken(int start, int end, int tokenType) {
/*  632 */     int so = start + this.offsetShift;
/*  633 */     addToken(this.zzBuffer, start, end, tokenType, so);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public void addToken(char[] array, int start, int end, int tokenType, int startOffset) {
/*  649 */     super.addToken(array, start, end, tokenType, startOffset);
/*  650 */     this.zzStartRead = this.zzMarkedPos;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public String[] getLineCommentStartAndEnd(int languageIndex) {
/*  656 */     return new String[] { ";", null };
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public Token getTokenList(Segment text, int initialTokenType, int startOffset) {
/*  674 */     resetTokenList();
/*  675 */     this.offsetShift = -text.offset + startOffset;
/*      */ 
/*      */     
/*  678 */     int state = 0;
/*  679 */     switch (initialTokenType) {
/*      */     
/*  681 */     }  state = 0;
/*      */ 
/*      */     
/*  684 */     this.s = text;
/*      */     try {
/*  686 */       yyreset(this.zzReader);
/*  687 */       yybegin(state);
/*  688 */       return yylex();
/*  689 */     } catch (IOException ioe) {
/*  690 */       ioe.printStackTrace();
/*  691 */       return (Token)new TokenImpl();
/*      */     } 
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private boolean zzRefill() {
/*  704 */     return (this.zzCurrentPos >= this.s.offset + this.s.count);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final void yyreset(Reader reader) {
/*  720 */     this.zzBuffer = this.s.array;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/*  728 */     this.zzStartRead = this.s.offset;
/*  729 */     this.zzEndRead = this.zzStartRead + this.s.count - 1;
/*  730 */     this.zzCurrentPos = this.zzMarkedPos = this.s.offset;
/*  731 */     this.zzLexicalState = 0;
/*  732 */     this.zzReader = reader;
/*  733 */     this.zzAtBOL = true;
/*  734 */     this.zzAtEOF = false;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public Assembler6502TokenMaker(Reader in) {
/*  747 */     this.zzReader = in;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public Assembler6502TokenMaker(InputStream in) {
/*  757 */     this(new InputStreamReader(in));
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static char[] zzUnpackCMap(String packed) {
/*  767 */     char[] map = new char[65536];
/*  768 */     int i = 0;
/*  769 */     int j = 0;
/*  770 */     label10: while (i < 186) {
/*  771 */       int count = packed.charAt(i++);
/*  772 */       char value = packed.charAt(i++); while (true)
/*  773 */       { map[j++] = value; if (--count <= 0)
/*      */           continue label10;  } 
/*  775 */     }  return map;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final void yyclose() throws IOException {
/*  783 */     this.zzAtEOF = true;
/*  784 */     this.zzEndRead = this.zzStartRead;
/*      */     
/*  786 */     if (this.zzReader != null) {
/*  787 */       this.zzReader.close();
/*      */     }
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final int yystate() {
/*  795 */     return this.zzLexicalState;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final void yybegin(int newState) {
/*  805 */     this.zzLexicalState = newState;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final String yytext() {
/*  813 */     return new String(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final char yycharat(int pos) {
/*  829 */     return this.zzBuffer[this.zzStartRead + pos];
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public final int yylength() {
/*  837 */     return this.zzMarkedPos - this.zzStartRead;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private void zzScanError(int errorCode) {
/*      */     String message;
/*      */     try {
/*  858 */       message = ZZ_ERROR_MSG[errorCode];
/*      */     }
/*  860 */     catch (ArrayIndexOutOfBoundsException e) {
/*  861 */       message = ZZ_ERROR_MSG[0];
/*      */     } 
/*      */     
/*  864 */     throw new Error(message);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public void yypushback(int number) {
/*  877 */     if (number > yylength()) {
/*  878 */       zzScanError(2);
/*      */     }
/*  880 */     this.zzMarkedPos -= number;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public Token yylex() throws IOException {
/*  898 */     int zzEndReadL = this.zzEndRead;
/*  899 */     char[] zzBufferL = this.zzBuffer;
/*  900 */     char[] zzCMapL = ZZ_CMAP;
/*      */     
/*  902 */     int[] zzTransL = ZZ_TRANS;
/*  903 */     int[] zzRowMapL = ZZ_ROWMAP;
/*  904 */     int[] zzAttrL = ZZ_ATTRIBUTE;
/*      */     
/*      */     while (true) {
/*  907 */       int zzInput, temp, zzMarkedPosL = this.zzMarkedPos;
/*      */       
/*  909 */       if (zzMarkedPosL > this.zzStartRead) {
/*  910 */         boolean eof; switch (zzBufferL[zzMarkedPosL - 1]) {
/*      */           case '\n':
/*      */           case '\013':
/*      */           case '\f':
/*      */           case '':
/*      */           case ' ':
/*      */           case ' ':
/*  917 */             this.zzAtBOL = true;
/*      */             break;
/*      */           case '\r':
/*  920 */             if (zzMarkedPosL < zzEndReadL) {
/*  921 */               this.zzAtBOL = (zzBufferL[zzMarkedPosL] != '\n'); break;
/*  922 */             }  if (this.zzAtEOF) {
/*  923 */               this.zzAtBOL = false; break;
/*      */             } 
/*  925 */             eof = zzRefill();
/*  926 */             zzMarkedPosL = this.zzMarkedPos;
/*  927 */             zzEndReadL = this.zzEndRead;
/*  928 */             zzBufferL = this.zzBuffer;
/*  929 */             if (eof) {
/*  930 */               this.zzAtBOL = false; break;
/*      */             } 
/*  932 */             this.zzAtBOL = (zzBufferL[zzMarkedPosL] != '\n');
/*      */             break;
/*      */           
/*      */           default:
/*  936 */             this.zzAtBOL = false; break;
/*      */         } 
/*      */       } 
/*  939 */       int zzAction = -1;
/*      */       
/*  941 */       int zzCurrentPosL = this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
/*      */       
/*  943 */       if (this.zzAtBOL) {
/*  944 */         this.zzState = ZZ_LEXSTATE[this.zzLexicalState + 1];
/*      */       } else {
/*  946 */         this.zzState = ZZ_LEXSTATE[this.zzLexicalState];
/*      */       } 
/*      */ 
/*      */ 
/*      */       
/*      */       while (true) {
/*  952 */         if (zzCurrentPosL < zzEndReadL)
/*  953 */         { zzInput = zzBufferL[zzCurrentPosL++]; }
/*  954 */         else { if (this.zzAtEOF) {
/*  955 */             int i = -1;
/*      */             
/*      */             break;
/*      */           } 
/*      */           
/*  960 */           this.zzCurrentPos = zzCurrentPosL;
/*  961 */           this.zzMarkedPos = zzMarkedPosL;
/*  962 */           boolean eof = zzRefill();
/*      */           
/*  964 */           zzCurrentPosL = this.zzCurrentPos;
/*  965 */           zzMarkedPosL = this.zzMarkedPos;
/*  966 */           zzBufferL = this.zzBuffer;
/*  967 */           zzEndReadL = this.zzEndRead;
/*  968 */           if (eof) {
/*  969 */             int i = -1;
/*      */             
/*      */             break;
/*      */           } 
/*  973 */           zzInput = zzBufferL[zzCurrentPosL++]; }
/*      */ 
/*      */         
/*  976 */         int zzNext = zzTransL[zzRowMapL[this.zzState] + zzCMapL[zzInput]];
/*  977 */         if (zzNext == -1)
/*  978 */           break;  this.zzState = zzNext;
/*      */         
/*  980 */         int zzAttributes = zzAttrL[this.zzState];
/*  981 */         if ((zzAttributes & 0x1) == 1) {
/*  982 */           zzAction = this.zzState;
/*  983 */           zzMarkedPosL = zzCurrentPosL;
/*  984 */           if ((zzAttributes & 0x8) == 8) {
/*      */             break;
/*      */           }
/*      */         } 
/*      */       } 
/*      */ 
/*      */       
/*  991 */       this.zzMarkedPos = zzMarkedPosL;
/*      */       
/*  993 */       switch ((zzAction < 0) ? zzAction : ZZ_ACTION[zzAction]) {
/*      */         case 1:
/*  995 */           addToken(20); continue;
/*      */         case 17:
/*      */           continue;
/*      */         case 14:
/*  999 */           addToken(8); continue;
/*      */         case 18:
/*      */           continue;
/*      */         case 12:
/* 1003 */           addToken(13); continue;
/*      */         case 19:
/*      */           continue;
/*      */         case 15:
/* 1007 */           addToken(17); continue;
/*      */         case 20:
/*      */           continue;
/*      */         case 7:
/* 1011 */           addToken(21); continue;
/*      */         case 21:
/*      */           continue;
/*      */         case 11:
/* 1015 */           addToken(24); continue;
/*      */         case 22:
/*      */           continue;
/*      */         case 16:
/* 1019 */           temp = this.zzStartRead; addToken(this.start, this.zzStartRead - 1, 1); addHyperlinkToken(temp, this.zzMarkedPos - 1, 1); this.start = this.zzMarkedPos; continue;
/*      */         case 23:
/*      */           continue;
/*      */         case 4:
/* 1023 */           addToken(38); continue;
/*      */         case 24:
/*      */           continue;
/*      */         case 5:
/* 1027 */           this.start = this.zzMarkedPos - 1; yybegin(2); continue;
/*      */         case 25:
/*      */           continue;
/*      */         case 8:
/* 1031 */           addToken(23); continue;
/*      */         case 26:
/*      */           continue;
/*      */         case 2:
/* 1035 */           addToken(10); continue;
/*      */         case 27:
/*      */           continue;
/*      */         case 13:
/* 1039 */           addToken(14); continue;
/*      */         case 28:
/*      */           continue;
/*      */         case 3:
/* 1043 */           addToken(37); addNullToken(); return (Token)this.firstToken;
/*      */         case 29:
/*      */           continue;
/*      */         case 6:
/* 1047 */           addNullToken(); return (Token)this.firstToken;
/*      */         case 30:
/*      */           continue;
/*      */         case 10:
/* 1051 */           addToken(this.start, this.zzStartRead - 1, 1); addNullToken(); return (Token)this.firstToken;
/*      */         
/*      */         case 31:
/*      */         case 9:
/*      */         case 32:
/*      */           continue;
/*      */       } 
/*      */       
/* 1059 */       if (zzInput == -1 && this.zzStartRead == this.zzCurrentPos) {
/* 1060 */         this.zzAtEOF = true;
/* 1061 */         switch (this.zzLexicalState) {
/*      */           case 2:
/* 1063 */             addToken(this.start, this.zzStartRead - 1, 1); addNullToken(); return (Token)this.firstToken;
/*      */           case 151:
/*      */             continue;
/*      */           case 0:
/* 1067 */             addNullToken(); return (Token)this.firstToken;
/*      */           case 152:
/*      */             continue;
/*      */         } 
/* 1071 */         return null;
/*      */       } 
/*      */ 
/*      */       
/* 1075 */       zzScanError(1);
/*      */     } 
/*      */   }
/*      */ }


/* Location:              C:\User\\user\Downloads\godzilla.jar!\org\fif\\ui\rsyntaxtextarea\modes\Assembler6502TokenMaker.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */